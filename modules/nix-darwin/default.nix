# This method of generating Nix configuration borrows heavily from the nix-darwin project:
# https://github.com/nix-darwin/nix-darwin/blob/0d71cbf88d63e938b37b85b3bf8b238bcf7b39b9/modules/nix/default.nix

{ lib, ... }:

let
  inherit (lib) types;

  mkValueString = v:
    if v == null then ""
    else if builtins.isInt v then builtins.toString v
    else if builtins.isBool v then lib.boolToString v
    else if builtins.isFloat v then lib.strings.floatToString v
    else if builtins.isList v then builtins.toString v
    else if lib.isDerivation v then builtins.toString v
    else if builtins.isPath v then builtins.toString v
    else if builtins.isString v then v
    else if lib.strings.isCoercibleToString v then builtins.toString v
    else abort "The nix conf value ${lib.generators.toPretty {} v} can't be encoded";
  mkKeyValue = k: v: "${lib.escape [ "=" ] k} = ${mkValueString v}";

  semanticConfType = with types;
    let
      confAtom = nullOr
        (oneOf [
          bool
          int
          float
          str
          path
          package
        ]) // {
        description = "Nix config atom (null, bool, int, float, str, path or package)";
      };
    in
    attrsOf (either confAtom (listOf confAtom));
in
{
  options.determinate-nix.customSettings = lib.mkOption {
    type = types.submodule {
      options = {
        # Configuration options specific to Determinate Nix
        lazy-trees = lib.mkOption {
          type = types.bool;
          default = false;
          example = true;
          description = ''
            Whether to enable [lazy trees](https://determinate.systems/posts/changelog-determinate-nix-366/).
          '';
        };
      };

      # Support "free-form" options in addition to the explicitly defined options above
      freeformType = semanticConfType;
    };
  };

  config = lib.mkIf (config.determinate-nix.customSettings != { }) {
    environment.etc."nix/nix.custom.conf".text =
      lib.concatStringsSep "\n" (
        [
          "# This file is generated by the determinate module for nix-darwin."
          "# Update this file by changing your nix-darwin configuration, not by modifying it directly."
          ""
        ]
        ++ lib.mapAttrsToList mkKeyValue config.determinate-nix.customSettings
      );
  };
}
